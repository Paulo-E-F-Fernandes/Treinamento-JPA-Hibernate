1. Criação do projeto pelo maven: 
    *  mvn archetype:generate -DgroupId=br.com.treinamento.jpa.hibernate 
           -DartifactId=Treinamento-JPA-Hibernate -DinteractiveMode=false 
           -DarchetypeArtifactId=maven-archetype-webapp

2. Criação do repositório git dentro do projeto criado:
    * git init

3. Configuração do build path e dependência pelo maven:
    * mvn eclipse:eclipse -Dwtpversion=2.0

4. Importação no eclipse.
    * No Eclipse: File > Import... > Existing Projects into Workspace

5. Correção dos erros no eclipse:
    * Faceted Project Problem > Java compiler level does not match the version of the installed Java project facet.
        ** SOLUÇÃO: Properties > Project Facets > Java => Selecionar versão correta do Java

    * Java Build Path Problems > Unbound classpath variable: 'M2_REPO/junit/junit/3.8.1/junit-3.8.1.jar' in project 'Treinamento-JPA-Hibernate'
        ** SOLUÇÃO: Adicionar o Classpath Variable do maven repository (M2_REPO):
             Window > Preferences > Java > Build Path > Classpath Variable

    * XML Problem > Referenced file contains errors (http://maven.apache.org/maven-v4_0_0.xsd)
        ** SOLUÇÃO: Aleterar no pom.xml o atributo "xsi:schemaLocation":
            - Trocar "http://maven.apache.org/maven-v4_0_0.xsd" por "http://maven.apache.org/xsd/maven-4.0.0.xsd"

6. Configuração do repositório remoto do git:
    * git remote add origin git@github.com:Paulo-E-F-Fernandes/Treinamento-JPA-Hibernate.git

7. Envio dos arquivos para o servidor remoto:
    * Primeiro fazer o "git pull origin master" para sincronização com o repositório remoto e depois "git push origin master" para enviar os arquivos do repositório local para o remoto.

8. Adição da dependência do Hibernate no pom.xml.

9. Adição do diretório java no path:
    * Criar o diretório java no src/main do projeto e executar o comando mvn eclipse:eclipse 
    
10. Criação do persistence.xml:
	* O "persistence.xml" é o arquivo de configuração padrão do JPA e deve ser criado no diretório META-INF da aplicação ou do módulo que contém os beans de entidade.
		O arquivo "persistence.xml" define unidades de persistência, conhecidas como persistence units.

11. Criação do EntityManagerFactory:
	* Para que as tabelas mapeadas pelas entidades sejam criadas ou atualizadas é preciso criar o EntityManagerFactory.
	* Compilar e executar o EntityManagerFactory (CriadorDeTabelas) para criar as tabelas no banco de dados.
		* OBS.: - A base de dados deve estar criada.
				- O <provider> no persistence.xml estava causando erro na execução do main, por isso foi retirado.
	* Sempre que alterrmos as estruturas das entidades, podemos executar a EntityManagerFactory para atualizar as tabelas do banco de dados.  
	
	